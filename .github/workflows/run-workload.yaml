name: run-workload
description: Run a workload to create a new modeling job and associated task configs.

on:
  workflow_dispatch:
    inputs:
      state:
        description: 'State to run (default: all)'
      disease:
        description: 'Disease to run (default: all)'
      report_date:
        description: 'Report date (default: today; format: YYYY-MM-DD)'
      reference_dates:
        description: 'Reference dates (default: [8 weeks before, 1 day before] report date; format: YYYY-MM-DD, YYYY-MM-DD)'
      data_container:
        description: 'Data path (default: None)'
      production_date:
        description: 'Production date (default: today; format: YYYY-MM-DD)'
      job_id:
        description: 'Job ID (default: Rt-estimation-<timestamp>-<uuid>)'
      task_exclusions:
        description: 'Task exclusions (state:disease pair - default: None; ex: NY:COVID-19)'
      output_container:
        description: 'Output container in Azure (default: nssp-rt-testing)'

jobs:
  run-workload:
    permissions:
          id-token: write # This is required for requesting the JWT
          contents: read  # This is required for actions/checkout
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v4

    # From: https://stackoverflow.com/a/58035262/2097171
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: get-branch

    # From: https://docs.github.com/en/actions/security-for-github-actions/security-hardening-your-deployments/configuring-openid-connect-in-cloud-providers#requesting-the-jwt-using-the-actions-core-toolkit
    - name: Install OIDC Client from Core Package
      run: npm install @actions/core@1.6.0 @actions/http-client
    - name: Get Id Token
      uses: actions/github-script@v7
      id: idtoken
      with:
        script: |
          const coredemo = require('@actions/core')
          const id_token = await coredemo.getIDToken('api://AzureADTokenExchange')
          coredemo.setOutput('id_token', id_token)

    - name: Run workload
      uses: CDCgov/cfa-actions/runner-action@v1.3.0
      with:
        github_app_id: ${{ secrets.CDCENT_ACTOR_APP_ID }}
        github_app_pem: ${{ secrets.CDCENT_ACTOR_APP_PEM }}
        wait_for_completion: true
        print_logs: true
        script: |
          CURRENT_BRANCH="${{ steps.get-branch.outputs.branch }}"
          echo "Cloning repo at branch '$CURRENT_BRANCH'"
          git clone -b "$CURRENT_BRANCH" https://github.com/${{ github.repository }}.git
          cd cfa-config-generator

          echo "Logging into Azure CLI"
          az login --output none --service-principal \
            --username ${{ secrets.EDAV_CFA_PREDICT_NNHT_SP_CLIENT_ID }} \
            --tenant ${{ secrets.AZ_TENANT_ID }} \
            --federated-token ${{ steps.idtoken.outputs.id_token }}

          echo "Installing uv"
          curl -LsSf https://astral.sh/uv/install.sh | sh

          echo "Running workload"
          state=${{ inputs.state }} \
          disease=${{ inputs.disease }} \
          reference_dates=${{ inputs.reference_dates }} \
          report_date=${{ inputs.report_date }} \
          data_container=${{ inputs.data_container }} \
          production_date=${{ inputs.production_date }} \
          job_id=${{ inputs.job_id }} \
          task_exclusions=${{ inputs.task_exclusions }} \
          output_container=${{ inputs.output_container }} \
            uv run python pipelines/epinow2/generate_config.py
